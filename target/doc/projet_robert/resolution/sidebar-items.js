initSidebarItems({"enum":[["RetourType","Les retours peuvent être soit un texte statique (&'static str) - c'est-à-dire invariable et intégré au directement dans le code source du programme (efficacité), soit un texte généré par la fonction de résolution (String) - c'est-à-dire variable. "]],"fn":[["resoudre",""],["resoudre_ajouter",""],["resoudre_alterer",""],["resoudre_definir",""],["resoudre_lister",""],["resoudre_obtenir",""],["resoudre_resumer",""],["resoudre_stop",""],["resoudre_supprimer",""],["resoudre_tester",""],["resoudre_vider",""]],"mod":[["resoudre_administration",""],["resoudre_canal",""],["resoudre_numerique",""],["resoudre_texte",""]],"struct":[["Contexte","La structure 'Contexte' permet de rassembler dans un objet unique, l'ensemble des éléments propres à un socket quelque soit la fonction de résolution qui sera appelée. Elle référence aussi le dictionnaire (canal) en cours, ainsi que le dictionnaire des canaux.  Dans une fonction de résolution, elle se présentera toujours dans la forme d'une référence mutable. "],["Retour",""]],"type":[["Resolveur","Un type spécifique au projet : le type 'Résolveur' est la signature d'une fonction de résolution, quelque soit le module de résolution.  Elle prend deux paramètres : le contexte du socket ainsi qu'un objet permettant de récupèrer à la demande les arguments dits 'locaux' (propre à une requête). La fonction renvoie un objet \"retour\", qui sera transmis au client via une série d'octets écrite sur le socket.  La définition de cette signature a pour principal but de soulager les signatures dans d'autres fonctions de résolution. "]]});